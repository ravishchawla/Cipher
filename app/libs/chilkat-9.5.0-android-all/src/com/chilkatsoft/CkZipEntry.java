/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class CkZipEntry {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected CkZipEntry(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CkZipEntry obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        chilkatJNI.delete_CkZipEntry(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CkZipEntry() {
    this(chilkatJNI.new_CkZipEntry(), true);
  }

  public void LastErrorXml(CkString str) {
    chilkatJNI.CkZipEntry_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorHtml(CkString str) {
    chilkatJNI.CkZipEntry_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorText(CkString str) {
    chilkatJNI.CkZipEntry_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_EventCallbackObject(CkBaseProgress progress) {
    chilkatJNI.CkZipEntry_put_EventCallbackObject(swigCPtr, this, CkBaseProgress.getCPtr(progress), progress);
  }

  public void get_LastErrorHtml(CkString str) {
    chilkatJNI.CkZipEntry_get_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorHtml() {
    return chilkatJNI.CkZipEntry_lastErrorHtml(swigCPtr, this);
  }

  public void get_LastErrorText(CkString str) {
    chilkatJNI.CkZipEntry_get_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorText() {
    return chilkatJNI.CkZipEntry_lastErrorText(swigCPtr, this);
  }

  public void get_LastErrorXml(CkString str) {
    chilkatJNI.CkZipEntry_get_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorXml() {
    return chilkatJNI.CkZipEntry_lastErrorXml(swigCPtr, this);
  }

  public void get_Version(CkString str) {
    chilkatJNI.CkZipEntry_get_Version(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String version() {
    return chilkatJNI.CkZipEntry_version(swigCPtr, this);
  }

  public void get_DebugLogFilePath(CkString str) {
    chilkatJNI.CkZipEntry_get_DebugLogFilePath(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String debugLogFilePath() {
    return chilkatJNI.CkZipEntry_debugLogFilePath(swigCPtr, this);
  }

  public void put_DebugLogFilePath(String newVal) {
    chilkatJNI.CkZipEntry_put_DebugLogFilePath(swigCPtr, this, newVal);
  }

  public boolean get_VerboseLogging() {
    return chilkatJNI.CkZipEntry_get_VerboseLogging(swigCPtr, this);
  }

  public void put_VerboseLogging(boolean newVal) {
    chilkatJNI.CkZipEntry_put_VerboseLogging(swigCPtr, this, newVal);
  }

  public boolean get_LastMethodSuccess() {
    return chilkatJNI.CkZipEntry_get_LastMethodSuccess(swigCPtr, this);
  }

  public void put_LastMethodSuccess(boolean newVal) {
    chilkatJNI.CkZipEntry_put_LastMethodSuccess(swigCPtr, this, newVal);
  }

  public boolean SaveLastError(String path) {
    return chilkatJNI.CkZipEntry_SaveLastError(swigCPtr, this, path);
  }

  public void get_Comment(CkString str) {
    chilkatJNI.CkZipEntry_get_Comment(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String comment() {
    return chilkatJNI.CkZipEntry_comment(swigCPtr, this);
  }

  public void put_Comment(String newVal) {
    chilkatJNI.CkZipEntry_put_Comment(swigCPtr, this, newVal);
  }

  public long get_CompressedLength() {
    return chilkatJNI.CkZipEntry_get_CompressedLength(swigCPtr, this);
  }

  public void get_CompressedLengthStr(CkString str) {
    chilkatJNI.CkZipEntry_get_CompressedLengthStr(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String compressedLengthStr() {
    return chilkatJNI.CkZipEntry_compressedLengthStr(swigCPtr, this);
  }

  public int get_CompressionLevel() {
    return chilkatJNI.CkZipEntry_get_CompressionLevel(swigCPtr, this);
  }

  public void put_CompressionLevel(int newVal) {
    chilkatJNI.CkZipEntry_put_CompressionLevel(swigCPtr, this, newVal);
  }

  public int get_CompressionMethod() {
    return chilkatJNI.CkZipEntry_get_CompressionMethod(swigCPtr, this);
  }

  public void put_CompressionMethod(int newVal) {
    chilkatJNI.CkZipEntry_put_CompressionMethod(swigCPtr, this, newVal);
  }

  public int get_Crc() {
    return chilkatJNI.CkZipEntry_get_Crc(swigCPtr, this);
  }

  public int get_EntryID() {
    return chilkatJNI.CkZipEntry_get_EntryID(swigCPtr, this);
  }

  public int get_EntryType() {
    return chilkatJNI.CkZipEntry_get_EntryType(swigCPtr, this);
  }

  public void get_FileDateTime(SYSTEMTIME outSysTime) {
    chilkatJNI.CkZipEntry_get_FileDateTime(swigCPtr, this, SYSTEMTIME.getCPtr(outSysTime), outSysTime);
  }

  public void put_FileDateTime(SYSTEMTIME sysTime) {
    chilkatJNI.CkZipEntry_put_FileDateTime(swigCPtr, this, SYSTEMTIME.getCPtr(sysTime), sysTime);
  }

  public void get_FileDateTimeStr(CkString str) {
    chilkatJNI.CkZipEntry_get_FileDateTimeStr(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String fileDateTimeStr() {
    return chilkatJNI.CkZipEntry_fileDateTimeStr(swigCPtr, this);
  }

  public void put_FileDateTimeStr(String newVal) {
    chilkatJNI.CkZipEntry_put_FileDateTimeStr(swigCPtr, this, newVal);
  }

  public void get_FileName(CkString str) {
    chilkatJNI.CkZipEntry_get_FileName(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String fileName() {
    return chilkatJNI.CkZipEntry_fileName(swigCPtr, this);
  }

  public void put_FileName(String newVal) {
    chilkatJNI.CkZipEntry_put_FileName(swigCPtr, this, newVal);
  }

  public void get_FileNameHex(CkString str) {
    chilkatJNI.CkZipEntry_get_FileNameHex(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String fileNameHex() {
    return chilkatJNI.CkZipEntry_fileNameHex(swigCPtr, this);
  }

  public int get_HeartbeatMs() {
    return chilkatJNI.CkZipEntry_get_HeartbeatMs(swigCPtr, this);
  }

  public void put_HeartbeatMs(int newVal) {
    chilkatJNI.CkZipEntry_put_HeartbeatMs(swigCPtr, this, newVal);
  }

  public boolean get_IsDirectory() {
    return chilkatJNI.CkZipEntry_get_IsDirectory(swigCPtr, this);
  }

  public boolean get_TextFlag() {
    return chilkatJNI.CkZipEntry_get_TextFlag(swigCPtr, this);
  }

  public void put_TextFlag(boolean newVal) {
    chilkatJNI.CkZipEntry_put_TextFlag(swigCPtr, this, newVal);
  }

  public long get_UncompressedLength() {
    return chilkatJNI.CkZipEntry_get_UncompressedLength(swigCPtr, this);
  }

  public void get_UncompressedLengthStr(CkString str) {
    chilkatJNI.CkZipEntry_get_UncompressedLengthStr(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String uncompressedLengthStr() {
    return chilkatJNI.CkZipEntry_uncompressedLengthStr(swigCPtr, this);
  }

  public boolean AppendData(CkByteData inData) {
    return chilkatJNI.CkZipEntry_AppendData(swigCPtr, this, CkByteData.getCPtr(inData), inData);
  }

  public CkTask AppendDataAsync(CkByteData inData) {
    long cPtr = chilkatJNI.CkZipEntry_AppendDataAsync(swigCPtr, this, CkByteData.getCPtr(inData), inData);
    return (cPtr == 0) ? null : new CkTask(cPtr, true);
  }

  public boolean AppendString(String inStr, String charset) {
    return chilkatJNI.CkZipEntry_AppendString(swigCPtr, this, inStr, charset);
  }

  public CkTask AppendStringAsync(String inStr, String charset) {
    long cPtr = chilkatJNI.CkZipEntry_AppendStringAsync(swigCPtr, this, inStr, charset);
    return (cPtr == 0) ? null : new CkTask(cPtr, true);
  }

  public boolean Copy(CkByteData outData) {
    return chilkatJNI.CkZipEntry_Copy(swigCPtr, this, CkByteData.getCPtr(outData), outData);
  }

  public boolean CopyToBase64(CkString outStr) {
    return chilkatJNI.CkZipEntry_CopyToBase64(swigCPtr, this, CkString.getCPtr(outStr), outStr);
  }

  public String copyToBase64() {
    return chilkatJNI.CkZipEntry_copyToBase64(swigCPtr, this);
  }

  public boolean CopyToHex(CkString outStr) {
    return chilkatJNI.CkZipEntry_CopyToHex(swigCPtr, this, CkString.getCPtr(outStr), outStr);
  }

  public String copyToHex() {
    return chilkatJNI.CkZipEntry_copyToHex(swigCPtr, this);
  }

  public boolean Extract(String dirPath) {
    return chilkatJNI.CkZipEntry_Extract(swigCPtr, this, dirPath);
  }

  public CkTask ExtractAsync(String dirPath) {
    long cPtr = chilkatJNI.CkZipEntry_ExtractAsync(swigCPtr, this, dirPath);
    return (cPtr == 0) ? null : new CkTask(cPtr, true);
  }

  public boolean ExtractInto(String dirPath) {
    return chilkatJNI.CkZipEntry_ExtractInto(swigCPtr, this, dirPath);
  }

  public CkTask ExtractIntoAsync(String dirPath) {
    long cPtr = chilkatJNI.CkZipEntry_ExtractIntoAsync(swigCPtr, this, dirPath);
    return (cPtr == 0) ? null : new CkTask(cPtr, true);
  }

  public CkDateTime GetDt() {
    long cPtr = chilkatJNI.CkZipEntry_GetDt(swigCPtr, this);
    return (cPtr == 0) ? null : new CkDateTime(cPtr, true);
  }

  public boolean Inflate(CkByteData outData) {
    return chilkatJNI.CkZipEntry_Inflate(swigCPtr, this, CkByteData.getCPtr(outData), outData);
  }

  public CkTask InflateAsync() {
    long cPtr = chilkatJNI.CkZipEntry_InflateAsync(swigCPtr, this);
    return (cPtr == 0) ? null : new CkTask(cPtr, true);
  }

  public CkZipEntry NextEntry() {
    long cPtr = chilkatJNI.CkZipEntry_NextEntry(swigCPtr, this);
    return (cPtr == 0) ? null : new CkZipEntry(cPtr, true);
  }

  public CkZipEntry NextMatchingEntry(String matchStr) {
    long cPtr = chilkatJNI.CkZipEntry_NextMatchingEntry(swigCPtr, this, matchStr);
    return (cPtr == 0) ? null : new CkZipEntry(cPtr, true);
  }

  public boolean ReplaceData(CkByteData inData) {
    return chilkatJNI.CkZipEntry_ReplaceData(swigCPtr, this, CkByteData.getCPtr(inData), inData);
  }

  public boolean ReplaceString(String inStr, String charset) {
    return chilkatJNI.CkZipEntry_ReplaceString(swigCPtr, this, inStr, charset);
  }

  public void SetDt(CkDateTime dt) {
    chilkatJNI.CkZipEntry_SetDt(swigCPtr, this, CkDateTime.getCPtr(dt), dt);
  }

  public boolean UnzipToString(int lineEndingBehavior, String srcCharset, CkString outStr) {
    return chilkatJNI.CkZipEntry_UnzipToString(swigCPtr, this, lineEndingBehavior, srcCharset, CkString.getCPtr(outStr), outStr);
  }

  public String unzipToString(int lineEndingBehavior, String srcCharset) {
    return chilkatJNI.CkZipEntry_unzipToString(swigCPtr, this, lineEndingBehavior, srcCharset);
  }

  public CkTask UnzipToStringAsync(int lineEndingBehavior, String srcCharset) {
    long cPtr = chilkatJNI.CkZipEntry_UnzipToStringAsync(swigCPtr, this, lineEndingBehavior, srcCharset);
    return (cPtr == 0) ? null : new CkTask(cPtr, true);
  }

}
