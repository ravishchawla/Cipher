/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class CkFileAccess {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected CkFileAccess(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CkFileAccess obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        chilkatJNI.delete_CkFileAccess(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CkFileAccess() {
    this(chilkatJNI.new_CkFileAccess(), true);
  }

  public void LastErrorXml(CkString str) {
    chilkatJNI.CkFileAccess_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorHtml(CkString str) {
    chilkatJNI.CkFileAccess_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorText(CkString str) {
    chilkatJNI.CkFileAccess_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void get_LastErrorHtml(CkString str) {
    chilkatJNI.CkFileAccess_get_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorHtml() {
    return chilkatJNI.CkFileAccess_lastErrorHtml(swigCPtr, this);
  }

  public void get_LastErrorText(CkString str) {
    chilkatJNI.CkFileAccess_get_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorText() {
    return chilkatJNI.CkFileAccess_lastErrorText(swigCPtr, this);
  }

  public void get_LastErrorXml(CkString str) {
    chilkatJNI.CkFileAccess_get_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorXml() {
    return chilkatJNI.CkFileAccess_lastErrorXml(swigCPtr, this);
  }

  public void get_Version(CkString str) {
    chilkatJNI.CkFileAccess_get_Version(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String version() {
    return chilkatJNI.CkFileAccess_version(swigCPtr, this);
  }

  public void get_DebugLogFilePath(CkString str) {
    chilkatJNI.CkFileAccess_get_DebugLogFilePath(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String debugLogFilePath() {
    return chilkatJNI.CkFileAccess_debugLogFilePath(swigCPtr, this);
  }

  public void put_DebugLogFilePath(String newVal) {
    chilkatJNI.CkFileAccess_put_DebugLogFilePath(swigCPtr, this, newVal);
  }

  public boolean get_VerboseLogging() {
    return chilkatJNI.CkFileAccess_get_VerboseLogging(swigCPtr, this);
  }

  public void put_VerboseLogging(boolean newVal) {
    chilkatJNI.CkFileAccess_put_VerboseLogging(swigCPtr, this, newVal);
  }

  public boolean get_LastMethodSuccess() {
    return chilkatJNI.CkFileAccess_get_LastMethodSuccess(swigCPtr, this);
  }

  public void put_LastMethodSuccess(boolean newVal) {
    chilkatJNI.CkFileAccess_put_LastMethodSuccess(swigCPtr, this, newVal);
  }

  public boolean SaveLastError(String path) {
    return chilkatJNI.CkFileAccess_SaveLastError(swigCPtr, this, path);
  }

  public void get_CurrentDir(CkString str) {
    chilkatJNI.CkFileAccess_get_CurrentDir(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String currentDir() {
    return chilkatJNI.CkFileAccess_currentDir(swigCPtr, this);
  }

  public boolean get_EndOfFile() {
    return chilkatJNI.CkFileAccess_get_EndOfFile(swigCPtr, this);
  }

  public int get_FileOpenError() {
    return chilkatJNI.CkFileAccess_get_FileOpenError(swigCPtr, this);
  }

  public void get_FileOpenErrorMsg(CkString str) {
    chilkatJNI.CkFileAccess_get_FileOpenErrorMsg(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String fileOpenErrorMsg() {
    return chilkatJNI.CkFileAccess_fileOpenErrorMsg(swigCPtr, this);
  }

  public boolean AppendAnsi(String text) {
    return chilkatJNI.CkFileAccess_AppendAnsi(swigCPtr, this, text);
  }

  public boolean AppendText(String text, String charset) {
    return chilkatJNI.CkFileAccess_AppendText(swigCPtr, this, text, charset);
  }

  public boolean AppendUnicodeBOM() {
    return chilkatJNI.CkFileAccess_AppendUnicodeBOM(swigCPtr, this);
  }

  public boolean AppendUtf8BOM() {
    return chilkatJNI.CkFileAccess_AppendUtf8BOM(swigCPtr, this);
  }

  public boolean DirAutoCreate(String path) {
    return chilkatJNI.CkFileAccess_DirAutoCreate(swigCPtr, this, path);
  }

  public boolean DirCreate(String path) {
    return chilkatJNI.CkFileAccess_DirCreate(swigCPtr, this, path);
  }

  public boolean DirDelete(String path) {
    return chilkatJNI.CkFileAccess_DirDelete(swigCPtr, this, path);
  }

  public boolean DirEnsureExists(String filePath) {
    return chilkatJNI.CkFileAccess_DirEnsureExists(swigCPtr, this, filePath);
  }

  public void FileClose() {
    chilkatJNI.CkFileAccess_FileClose(swigCPtr, this);
  }

  public boolean FileContentsEqual(String path1, String path2) {
    return chilkatJNI.CkFileAccess_FileContentsEqual(swigCPtr, this, path1, path2);
  }

  public boolean FileCopy(String existing, String newFilename, boolean failIfExists) {
    return chilkatJNI.CkFileAccess_FileCopy(swigCPtr, this, existing, newFilename, failIfExists);
  }

  public boolean FileDelete(String filename) {
    return chilkatJNI.CkFileAccess_FileDelete(swigCPtr, this, filename);
  }

  public boolean FileExists(String path) {
    return chilkatJNI.CkFileAccess_FileExists(swigCPtr, this, path);
  }

  public int FileExists3(String path) {
    return chilkatJNI.CkFileAccess_FileExists3(swigCPtr, this, path);
  }

  public boolean FileOpen(String filename, long accessMode, long shareMode, long createDisp, long attr) {
    return chilkatJNI.CkFileAccess_FileOpen(swigCPtr, this, filename, accessMode, shareMode, createDisp, attr);
  }

  public boolean FileRead(int numBytes, CkByteData outBytes) {
    return chilkatJNI.CkFileAccess_FileRead(swigCPtr, this, numBytes, CkByteData.getCPtr(outBytes), outBytes);
  }

  public boolean FileRename(String existing, String newFilename) {
    return chilkatJNI.CkFileAccess_FileRename(swigCPtr, this, existing, newFilename);
  }

  public boolean FileSeek(int offset, int origin) {
    return chilkatJNI.CkFileAccess_FileSeek(swigCPtr, this, offset, origin);
  }

  public int FileSize(String filename) {
    return chilkatJNI.CkFileAccess_FileSize(swigCPtr, this, filename);
  }

  public boolean FileWrite(CkByteData data) {
    return chilkatJNI.CkFileAccess_FileWrite(swigCPtr, this, CkByteData.getCPtr(data), data);
  }

  public boolean GetTempFilename(String dirName, String prefix, CkString outStr) {
    return chilkatJNI.CkFileAccess_GetTempFilename(swigCPtr, this, dirName, prefix, CkString.getCPtr(outStr), outStr);
  }

  public String getTempFilename(String dirName, String prefix) {
    return chilkatJNI.CkFileAccess_getTempFilename(swigCPtr, this, dirName, prefix);
  }

  public String tempFilename(String dirName, String prefix) {
    return chilkatJNI.CkFileAccess_tempFilename(swigCPtr, this, dirName, prefix);
  }

  public boolean OpenForAppend(String filePath) {
    return chilkatJNI.CkFileAccess_OpenForAppend(swigCPtr, this, filePath);
  }

  public boolean OpenForRead(String filePath) {
    return chilkatJNI.CkFileAccess_OpenForRead(swigCPtr, this, filePath);
  }

  public boolean OpenForReadWrite(String filePath) {
    return chilkatJNI.CkFileAccess_OpenForReadWrite(swigCPtr, this, filePath);
  }

  public boolean OpenForWrite(String filePath) {
    return chilkatJNI.CkFileAccess_OpenForWrite(swigCPtr, this, filePath);
  }

  public boolean ReadBinaryToEncoded(String filename, String encoding, CkString outStr) {
    return chilkatJNI.CkFileAccess_ReadBinaryToEncoded(swigCPtr, this, filename, encoding, CkString.getCPtr(outStr), outStr);
  }

  public String readBinaryToEncoded(String filename, String encoding) {
    return chilkatJNI.CkFileAccess_readBinaryToEncoded(swigCPtr, this, filename, encoding);
  }

  public boolean ReadEntireFile(String filename, CkByteData outBytes) {
    return chilkatJNI.CkFileAccess_ReadEntireFile(swigCPtr, this, filename, CkByteData.getCPtr(outBytes), outBytes);
  }

  public boolean ReadEntireTextFile(String filename, String charset, CkString outStrFileContents) {
    return chilkatJNI.CkFileAccess_ReadEntireTextFile(swigCPtr, this, filename, charset, CkString.getCPtr(outStrFileContents), outStrFileContents);
  }

  public String readEntireTextFile(String filename, String charset) {
    return chilkatJNI.CkFileAccess_readEntireTextFile(swigCPtr, this, filename, charset);
  }

  public boolean ReassembleFile(String partsDirPath, String partPrefix, String partExtension, String reassembledFilename) {
    return chilkatJNI.CkFileAccess_ReassembleFile(swigCPtr, this, partsDirPath, partPrefix, partExtension, reassembledFilename);
  }

  public int ReplaceStrings(String path, String charset, String existingString, String replacementString) {
    return chilkatJNI.CkFileAccess_ReplaceStrings(swigCPtr, this, path, charset, existingString, replacementString);
  }

  public boolean SetCurrentDir(String path) {
    return chilkatJNI.CkFileAccess_SetCurrentDir(swigCPtr, this, path);
  }

  public boolean SetFileTimes(String path, CkDateTime create, CkDateTime lastAccess, CkDateTime lastModified) {
    return chilkatJNI.CkFileAccess_SetFileTimes(swigCPtr, this, path, CkDateTime.getCPtr(create), create, CkDateTime.getCPtr(lastAccess), lastAccess, CkDateTime.getCPtr(lastModified), lastModified);
  }

  public boolean SetLastModified(String path, CkDateTime lastModified) {
    return chilkatJNI.CkFileAccess_SetLastModified(swigCPtr, this, path, CkDateTime.getCPtr(lastModified), lastModified);
  }

  public boolean SplitFile(String fileToSplit, String partPrefix, String partExtension, int partSize, String destDir) {
    return chilkatJNI.CkFileAccess_SplitFile(swigCPtr, this, fileToSplit, partPrefix, partExtension, partSize, destDir);
  }

  public boolean TreeDelete(String path) {
    return chilkatJNI.CkFileAccess_TreeDelete(swigCPtr, this, path);
  }

  public boolean WriteEntireFile(String filename, CkByteData fileData) {
    return chilkatJNI.CkFileAccess_WriteEntireFile(swigCPtr, this, filename, CkByteData.getCPtr(fileData), fileData);
  }

  public boolean WriteEntireTextFile(String filename, String fileData, String charset, boolean includePreamble) {
    return chilkatJNI.CkFileAccess_WriteEntireTextFile(swigCPtr, this, filename, fileData, charset, includePreamble);
  }

}
